
--     Identifying Unknown DNA Quicklyclick to expand

-- Problem

-- The GC-content of a DNA string is given by the percentage of symbols in the
-- string that are 'C' or 'G'. For example, the GC-content of "AGCTATAG" is 37.5%.
-- Note that the reverse complement of any DNA string has the same GC-content.

-- The GC-content of a DNA string is given by the percentage of symbols in the
-- string that are 'C' or 'G'. For example, the GC-content of "AGCTATAG" is 37.5%.
-- Note that the reverse complement of any DNA string has the same GC-content.

  -- total --> 100%
  -- GCS   --> ?
  -- GCS * 100% = total * ?
  --
  --  GCS * 1
  -- ----------  = ?
  --    total
  --

def calc_GC (str : String) : Float :=
  let isGC c := (c == 'C') || (c == 'G')
  let ⟨cs⟩  := str
  let total := cs.length
  let GCs   := cs.filter isGC |> List.length

  100 * GCs.toFloat / total.toFloat

def List.cutIn (l : List α) (p : α → Bool) : List α × List α :=
  match l with
  | [] => ([], [])
  | x :: xs =>
    if p x then
      ([], l)
    else
      let (ls, rs) := List.cutIn xs p
      (x :: ls , rs)

def String.cutIn (str : String) (p : Char → Bool) : String × String :=
  let ⟨resL, resR⟩ := str.data.cutIn p
  (⟨resL⟩, ⟨resR⟩)

def String.clearString (s : String) : String := (s.replace "\n" "").replace "\t" ""

#eval "oi, tudo bom? a a gfwepogfjkweopfgkwe".cutIn (· == 'a')
#eval [1, 2, 3, 4, 5, 6, 7, 8].cutIn (· = 5)  --> ([] <: x, [2])

#eval ">Rosalind_".isPrefixOf ">Rosalind_6404 CCTGCGGAAGATCGGCACTAGAATAGCCAG
  AACCGTTTCTCTGAGGCTTCCGGCCTTCCC
  TCCCACTAATAATTCTGAGG".trim

open String in
partial def parse_FASTA's (str : String) : List (String × String) :=
  let parse_key := ">Rosalind_"
  if parse_key.isPrefixOf str then
    let pk_len := parse_key.length
    let ⟨tail, next⟩ := str.drop (pk_len + 4) |> (·.cutIn (· == '>'))
    let w := ("Rosalind_" ++ (str |> (·.drop pk_len) |> (·.take 4)), tail)
    w :: parse_FASTA's (next)
  else
    []

def test₁ := ">Rosalind_6404CCTGCGGAAGATCGGCACTAGAATAGCCAGAACCGTTTCTCTGAGGCTTCCGGCCTTCCCTCCCACTAATAATTCTGAGG>Rosalind_5959
CCATCGGTAGCGCATCCTTAGTCCAATTAAGTCCCTATCCAGGCGCTCCGCCGAAGGTCT
ATATCCATTTGTCAGCAGAC>ACGC".trim.clearString

#eval test₁
#eval test₁
#eval test₁.drop 14 |> (·.splitOn ">")
#check String.splitOn
#check String.takeWhile
#eval "eqwpiofjqewoigjwegiowj".takeWhile (· == 'e')
#eval "eqwpiofjqewoigjwegiowj".takeWhile (· != 'a')

def test₂ := ">Rosalind_6404
CCTGCGGAAGATCGGCACTAGAATAGCCAGAACCGTTTCTCTGAGGCTTCCGGCCTTCCC
TCCCACTAATAATTCTGAGG
>Rosalind_5959
CCATCGGTAGCGCATCCTTAGTCCAATTAAGTCCCTATCCAGGCGCTCCGCCGAAGGTCT
ATATCCATTTGTCAGCAGACACGC
>Rosalind_0808
CCACCCTCGTGGTATGGCTAGGCATTCAGGAACCGGAGAACGCTTCAGACCAGCCCGGAC
TGGGAACCTGCGGGCAGTAGGTGGAAT"

#eval parse_FASTA's (test₂.trim.clearString)

-- DNA strings must be labeled when they are consolidated into a database.
-- A commonly used method of string labeling is called FASTA format.
-- In this format, the string is introduced by a line that begins with '>',
-- followed by some labeling information. Subsequent lines contain the string
-- itself; the first line to begin with '>' indicates the label of the next string.

-- In Rosalind's implementation, a string in FASTA format will be labeled by the
-- ID "Rosalind_xxxx",-- i where "xxxx" denotes a four-digit code between 0000
-- and 9999.

-- Given: At most 10 DNA strings in FASTA format (of length at most 1 kbp each).

-- Return: The ID of the string having the highest GC-content, followed by the
-- GC-content of that string. Rosalind allows for a default error of 0.001 in all decimal answers
-- unless otherwise stated; please see the note on absolute error below.
-- Sample Dataset
#eval (">Rosalind_6404CCTGCGGAAGATCGGCACTAGAATAGCCAGAACCGTTTCTCTGAGGCTTCCGGCCTTCCCTCCCACTAATAATTCTGAG  G>Rosalind_5959
CCATCGGTAGCGCATCCTTAGTCCAATTAAGTCCCTATCCAGGCGCTCCGCCGAAGGTCT
ATATCCATTTGTCAGCAGACACGC".trim.splitOn ">").drop 1

def Prod.map2 (w : α × β) (f : β → γ) : α × γ := (w.1, f w.2)

partial def List.betterQS (l : List α) (f : α → β) [LE β] [LT β] [DecidableLE β] [DecidableLT β] : List α :=
  match l with
  | [] => []
  | x :: xs =>
    let ls := xs.filter $ (f x > ·) ∘ f -- pointfree? (ugly :P)
    let rs := xs.filter $ (f x ≤ ·) ∘ f
    List.betterQS ls f ++ [x] ++ List.betterQS rs f


#check Prod.map_snd
#eval [1, 1243, 123, 2,1 ,23,23 ,123125,123,123,23].betterQS id
#eval [1, 1243, 123, 2,1 ,23,23 ,123125,123,123,23].betterQS toString

#check String.append
def uncurry (f : α → β → γ) : α × β → γ
  | (a, b) => f a b


open String List Prod in
def solution := (λ w => w.fst ++ "\n" ++ w.snd) ∘ (map2 · toString) ∘ (headD · default)
                ∘ (betterQS · ((-1 * ·) ∘ snd)) ∘ map (map2 · calc_GC) ∘ parse_FASTA's
                ∘ clearString ∘ trim

open String List Prod in
#eval (IO.print ∘  (λ w => w.fst ++ "\n" ++ w.snd) ∘ (map2 · toString) ∘ (headD · default)
                ∘ (betterQS · ((-1 * ·) ∘ snd)) ∘ map (map2 · calc_GC) ∘ parse_FASTA's
                ∘ clearString ∘ trim) ">Rosalind_6404

CCTGCGGAAGATCGGCACTAGAATAGCCAGAACCGTTTCTCTGAGGCTTCCGGCCTTCCC
TCCCACTAATAATTCTGAGG
>Rosalind_5959
CCATCGGTAGCGCATCCTTAGTCCAATTAAGTCCCTATCCAGGCGCTCCGCCGAAGGTCT
ATATCCATTTGTCAGCAGACACGC
>Rosalind_0808
CCACCCTCGTGGTATGGCTAGGCATTCAGGAACCGGAGAACGCTTCAGACCAGCCCGGAC
TGGGAACCTGCGGGCAGTAGGTGGAAT"

-- >Rosalind_6404
-- CCTGCGGAAGATCGGCACTAGAATAGCCAGAACCGTTTCTCTGAGGCTTCCGGCCTTCCC
-- TCCCACTAATAATTCTGAGG
-- >Rosalind_5959
-- CCATCGGTAGCGCATCCTTAGTCCAATTAAGTCCCTATCCAGGCGCTCCGCCGAAGGTCT
-- ATATCCATTTGTCAGCAGACACGC
-- >Rosalind_0808
-- CCACCCTCGTGGTATGGCTAGGCATTCAGGAACCGGAGAACGCTTCAGACCAGCCCGGAC
-- TGGGAACCTGCGGGCAGTAGGTGGAAT

#eval calc_GC "CCACCCTCGTGGTATGGCTAGGCATTCAGGAACCGGAGAACGCTTCAGACCAGCCCGGACTGGGAACCTGCGGGCAGTAGGTGGAAT"

#eval calc_GC "CCACCCTCGTGGTATGGCTAGGCATTCAGGAACCGGAGAACGCTTCAGACCAGCCCGGACTGGGAACCTGCGGGCAGTAGGTGGAAT"
-- Sample Output
-- Rosalind_0808
-- 60.919540
--
--FICA-PRA-A-PROXIMA------------------------------------------------------------------
-- def bufsize : USize := 20 * 1024

-- partial def dump (stream : IO.FS.Stream) : IO Unit := do {
--   let buf ← stream.read bufsize
--   if ¬buf.isEmpty then {
--     let stdout ← IO.getStdout
--     stdout.write buf;
--     dump stream
--   }
-- }

-- def fileStream (filename : System.FilePath) : IO (Option IO.FS.Stream) := do {
--   let fileExists ← filename.pathExists
--   if ¬fileExists then {
--     let stderr ← IO.getStderr
--     stderr.putStrLn s!"File not found: {filename}"
--     return none
--   }

--   let handle ← IO.FS.Handle.mk filename IO.FS.Mode.read
--   return some $ IO.FS.Stream.ofHandle handle
-- }

-- def main (args : List String) : IO Unit := do {
--   match args with
--   | [filename] =>

--     let stdin ← IO.getStdin
--     dump stdin

--     let stream ← fileStream ⟨filename⟩
--     match stream with
--       | some stream =>
--         dump stream
--         return
--       | _ =>
--         IO.println "erro!"
--         return
--   | _ => return ()
-- }

#eval (IO.println ∘ solution) ">Rosalind_7835
TTGGTGTTGAAATAACCGAACTAACGCGACGGCACTCAACCTAAAGCGAGTCTAACTGAC
CCACGATGTGCTATTACTGTTCTGCACGATGACCAAGTGTTCATGTTGGTTTGTCGCCAG
GTACTGACGTCCAAACTAGCAACTCAGCTTAACTGACTCCCCTGATCACTCACGAAGACG
CCAGGAGCCGAGCCGTTAGCAATACAGTCCTTATACTCAGACTGTCACGCTCAACAGAGT
ATCCTTCTCGACATCGACGCAGACTATGCTGGACACTTGAACGTTTCGTGCCACCCCGTA
CCATATAAGAAAACTCCAGGATAACGTAACCTACCCACTTAAAAAACGCCGGTAAATACT
AAGGCGCCGTTAGTCAGGTTTAATGCCATACTGCGTAATGCCAACTTTTCAGGCCCACCA
ACCGCCTCAATCCATAATAATGGGCCTGACTGTGACTGGATGATGCGTTACCCAGTGCTC
ACCAGGCTGAGATGAAGTAGTGTGACGATTAGTCTGCATAGTGCTCGCACTCCATCCCCG
GGATCATAAGTAGAAGTCCCATACGGGGCTTGCAAATTCGGCGAATGCCGATATTTAGGT
TTCGTACCCCTGACAGGCAGCGCCGAACCTCTGATGACCTATAGTCCCGCAGGTGAAGTT
CTAGTACAGGTAAGAATGTGTTAATTCCCTCTGGCGTCAATATCAAGCAAAGGTGTGATG
GACTATGTAAGTTTAAGTTACAACTGGCTACGATGTGCTCCCAGATGCAAACGGAAATAT
GCTGATGCATCTATGATCGTAGAAACCGGCTGTATATCCATGTTCTCTAGATGTGGGCGA
GCGGGATGAAATTGCAAACCGAATAACTGCACTCCGTCGGCTGAATTGTACATGTAGCCG
AGGTCCCTGCGAGCACAAATG
>Rosalind_4001
CACGCAGGCAATTTGTCGTCAAATAAGAAGTGAGACTGGGCTGCTCCATGGTCGACTGGT
TGGACGAACTAGATCTTGCCGCGAAAAGACTGTTGTCCACTGGTGTTCAACTGTTTTGGT
CAATTATACAGTAACTAGAAGATCACGCCCGCGCCAGCGTCGAACGTTGACAATGCAGGG
TAGATACTAAACGACGCCAGACCCAGTTTGCCCAGGAAAAGCCGCCCTTAGCGATCCTAC
GTTACGAGTCCCTGTCACTGAACCTGCTGCGAGGGGTGTACAAAAACATGTTTTTGGCTT
ATTTATATTTTCTAACAGGGTGATCCCTGCGCTTGCTGTGGTCGGCGCCGAGAAGTCCTT
CCATCCTGAAACGGAACGTATGGTCGAGTCAGCGGGTCCCGTTTACCTGCAAGCAGGAGT
GCTAGATTCTGGCCCGCGATAAAAAATCTTAACTACGGAGATATCGCGCAGATATAAGGC
GTTCCTGTTGGAAGTTAATTCCGATCGTATTCCTACCTGGTTTCTGGCTATTTCAGTCTC
ACGGGATTCAGTCCGCAGAAGTGGCGAAAGCGGTATCCTACAACCTGCTCCGCCAGATGT
TCGTCGGGCAGCCAAATCACCATCTCTGTCGGCAGGGCTACCTATAAGACGTGCATCTCC
TAATAAACAGGGGCGAGCTAGTACTAAATCATCCTTCCTGTGCAGAATGCCATCGACGGC
CAGTCATTGATGTAACGAACGGATTTCATCGGGCGATGTAAAGGCATCACAAAGTCTGAA
GAAGGACAGCAAGGATTCGCTGGGAAGACAGCTTAGGGAGTGCAATAAGTTCAAAGCGCA
ACCTCGCGTATCACTGGGACGAATGCTATCGAACTTTATTACCTAGGACGGTTTGTCGCC
GGCTACGGGGTGCATACAGT
>Rosalind_1629
TGTTTGGGCATAATGCAGGGGCAATTAGTCGACAGACCTCACCGGAAATCGCTCCGAGCA
GCGGAGGCGGTCGCGGATTTTGGTTCCCCGACTTTGCCGTATTATGACTTCGTTGCTTTA
CTAAGACTGAGGCGATGTCAGCAATTCCAGCTTTAAAAAGCGTCAGTATTTTAAAGCATG
ACTTTGTTAATCGGTATCCCCACCTAGATTGTACACGTACTCGTGGGATCGAGCACTCCA
GTCTCTCCCTAATGGCGGCAAGTCAATCGATCAGCGGAGCCGGGATGGTTGACCCAAAAG
GTCTCGCGATTCGCGCCGGTCCATGTATAAAATTACTATAAAGCAACTTTCCAGCGAGTG
AGAAACTCAGACCGCCAGACACATCTCGACCGGTGGTTACTTTAGACGTGCAGTCTCCTA
GCGCCCCCGACGCACGAAGTTGCGATTTCTACACCCTCGCAGCAACGTTGGAGATATGAG
ATTTCCGCTATAAATCGGGCGACTATTGTTGGCTGGACACATTCAAGATCGCATGGCAGG
CTTAAAGGATCTTTCCTAAGATTGGAGATATTTCGAATTGTCACGGTCAGTCCATGACAT
TTTCATCGACAACAATGTCTATAGAGTCTGGAGGCCAAAGTCGTTCCCAACACCTGACTA
GGTTTGAGATTGAATGCGCGAGCTAACTGTTTGTGGCCTTAGTGCCGATTTAGGACTGTA
TAGCGCAGAGGGAGCGACTCAGCATCTACAATCCCGCGGATCGGCAGTCATCCAGGTGGG
GGGGGGGTAGAGCCCGGGCATGGTTACTCGGGCCGAGTACTGTAGCGCGTTCCCTTCGAT
CGAATTGCATGGTTCCTTGTAAGAGCATCTTGGTCCTCCCCCTTGTCATCTCTAGGGACG
CGAAACCGCCACGTCCTGTTCAACATAG
>Rosalind_7749
GGCCGGTGTGAATCTGGGTTACGGTAAAGCAGGCGCCGTAAGTAATTTGCCGATCATTTT
AGTTTGCTGGCATAGACTCTGAAGTAGGAGAGTCTAGACCTTAGACCGTGTGCGCACCGC
CTCTTCTCGTTATGCCTGGCTCTCATAGGCGCTTGCATCCGCGGACGCCATAGGTTTTCA
GCGCGGACTAGTTATTGTGTTTATTATAGTTATCGATTTCAGGAGTTTGTGTAACCTAAA
TCGTCTTAAAAAAGATTGAGTACTTACGGAGCACATTAATAGCTTACAGCCGCACGACTC
TAATGGACATCTAACAAAAGTGGGCCCACATTAAAATTCTACGGAGCAGCTGATCCAGTG
CCCCGAACGTGCCCGAATGTAATACTCGTAACGACTTCGAAACAAGTCGACGATCCCGAT
GATCTTGTCCTGTTGTAAAGGTAAGTCGGTACATACTGTCGAGGGTCATACGGCTTTCCA
TGGAGGCAGCCTATAACGACTAGGCGGATTTCAAAAACATCGCTTACCCTACGGAGATGG
ATTAGCCTATCGACGGCTGGAAATTAATGACTTGCTGGCCCACCTACCTATTTTACGCCA
TATAGACGTGCGTAACTTGTAGTCGGGAATTTGACGTAAAATAGATGGTGCCAGCTATCA
ACTTCGGTATCTGAGAGCCGGATATCACGTCGTTTAGTGAGTCCAGGGTCCCAGTCAGGA
CCCTAGGCCTCTAGTGCTAGTGTTGTAAGTAGCGACCCACACAGACAGCTTTCGTCGAAT
GATCATGTTTATGTAATCGCTTCACCCACCGCATACAGAGCTGGCGTGATAAGAGACTCG
AGGGTCGTCTTCGAGGATTCCA
>Rosalind_8797
AGCGGTAAGCAGGCGAGACCAACACTCGTCTAGGCCTTTTGCCTGCTGCGGTAACAAACT
GAACCGTAATGAATCGAAGAATGTATGTTTGGGGTCTTGGTACTGAGCCGAAACATTCCT
CTCCGTGGTGCGTAAAGTAGATACATCCTCCTCAGCTGTTTACCCAGATATAACCGGTAT
CGGAAGCGAATAACCTCGCAATCTTCAGGCCGTACCCGGCGCCAACTTTGCGTCAGGATA
CCTGGACCTCGGTCGAGGGACCAAGGACCAATGCTTTGATGAAACGTGCGTGTCGATGCA
CGGACCACCACATTCTAACCATCAGAACATCCGCTCGAACTCACCATTCTAAGTATAGTC
ATGAGGAGCTGCTGCTGGGGCTTAACCTCACTGGATTTATAAGGATTAGCAGCAAACAGA
ACATAGAGATACCTTTTTTTTACGAACTCTCCCTCTATTACCGTATGAGCTTCGTGTTAA
GTAAGGTGTACCATTACCCCATTCGAGATCTAACATTAGTCCCGGAATCGGTAGCGCCAG
TAACTCTCGCAATAACTACTTAAGTGTCGGATACGTGCTATTACACTGGCGTACAAAAGT
CCCCCATATGATGCTGCAAGGTCATTTGTGGACACAAGTATGGGCCATGAGGTCGCGACC
AATTCGTTTGGTTGCCAAGACGACATTACTTTGCAACCTGAATATGGCTGCGTAGTGAGA
CGCAGACAGGATTTCCGGACATCGAGCTAACTCAAACTTAACATCCATGAGTAATGGTCG
CTCTGCTCCCGCCTCTAGCGTTAGGACGTAGACGTCTCCGGAAAAGCACCCCCGCAGATA
ACTCAGTACCGGCACGCACACTCAGAGAAAGACATTGGAGCTACGAGCAAGAGTCCCGGT
ATCATCCGCTCTTCTAAGTGCTAC
>Rosalind_8586
ACCTCCACTATAATTCGATCCCAACGCTTCCCAAGTCCTCGTGCTGTAATTGAGGGGAAA
ACAGACGAACGTCCACGCGCGAGCAGGTTGACGAGGCACAGCAGGGCGTGAACGTACAGT
GTGCGTAGCGGATCAAGGTCTAAAGTAAAATCGGATCTGGAGGTGCGCCCAATGTACGTA
TCTCTCGGAACGCAGTATCACTTGGCATACTTTCAGGAGTTTGACGATAACAGCACTGTC
TTTTGAGCCAGACCAGCCCTGATGATCGTGACACCCGACGGAGTTGGGGCGAGAAGCGCA
GTCGCCCTTGCTGCTAGACTCACAGTTCCCCCAGACGCTCCTTGGGTCGCAGTTCAAGAT
GCGTATCTACCAAAGATTGATCCTCTTAAGCCCCATCCATAAGCTGTTGATGCTGGCCAG
TCGCGTATACACTCCCCGCTCCACGCTGAGTTTAGACGAATATCAGGCTCTTTCTATACG
AGATGAGCTTACACGGCCAGTGGCAGAAGCACATACCTGGCACACTCAATTTTAGTAGAT
GTGGCTGCTTTCTTGTGTGCGCCGCCGCCCAGACAGAACCCCCCGTCGCATGAGTTCCAA
CCGCCGTTTGACGATTTGTCCCTGCCCACTGCCATGAGAACGTGCTCATGACCGTGTTTT
AGCTGGCTTAGTATGGGTATAGAGACCTGGAATAGATTGCGTTTCATGAGTTTCGTAAGA
GCATGGGGCGCAAACATAATGAAGCAACCTTACCAACCTACGTTTCCCTGAGTGACAATC
TGTGGAGGATCCTAAACCACCGACGAGTTCTCGTTGCTTCTAGGCACACACTTATATATC
CCTCTCTGCCTTATACCCAATGCTCTCGCCCGGTGAATTTGCCAACACGGCCCCCTGTCT
TATCGACTAAGGCAACTCGCTTCCAGCAATGCAGTCCGTGCTCCAGTCT"


#eval (IO.println ∘ solution) ">Rosalind_8537
ATTATTCGGAAGATGTCGTGCACGTGGTGCCGGTGGTAACGTTATTGGATAACTACATGA
AAGCGAGAGGCTAGTCCATCGCCTCTCGCGTCCTTAGGGAGTATACAAGTATGCCTGTGC
ACCTGGTGTGGTACCATACCGAAAGGGCGGGCATTTGCGATAGCTTTAGGTACGCGACCG
TCCCGCATTGAGCCAGTTCGCATCCAGAAAAAATGGTGGGTCTCTCACAGCCGCTGCAGA
GGGGTTCTCGGCGTGCGTCACCGCTACTATGTGGCGGGGCGTGAGGTCGCCTCCCGCCCA
CCCCACTTGGCCTGACACAGGCGACAACTTCTGCCTGTATCTTCACGATGGAGCAGAGAG
TAACAGTGAAACTAAGATCCTCCCGATTAATCACCTAACATCTCGGTGGTATAACGGGGG
GTAGCTCTATATCGTAAGGCATTTACACGTACGGATTGCCCTTAGGCCGGTTAGGGAGCT
CTAAGGTAGATCTTGGAGGTCGCCGGAAAGTACGCCGCCCACATCACGCCGCGAGGTGCC
TTGCTATAGGGCTGCGACTGGGTAATGCTTGATCGACCGGATCAAATAGCAAGCATGGTC
AGAGACTATAGTTAAAAGAAGTTATGTCACGCCAATGTCGGAGGGATATTGCTGTGCTCG
CTTGAGCTAGCACTGTGAGATTTTGAAATACCGCTGGTCTATAAATATAAGCTCGGGTAG
GAGTCCCCAGGATCTTGTGTTGCGGTCCCAAGAACGCGAACAGATACCCGTACTAACGTA
TCATGGATTACCCGCATGTTAAAGCCCGCGTGCGTTCTACACATCTCAATGCACCTAAAC
TGTACGAACTGGGCCTTACTCATAGTCTTGAGTGGCTCAATATGATTACTATTTTCCAAT
AACAAGCGCGGCTAGTACATGAGGGGAGACGGTGATCGCGTTATGTAATCAGAATGCCGA
GGCGGTTAC
>Rosalind_1114
CAGATCTACTGAGACAGACGACGACCTACACCTTCGGGGATCGCCACCGACAAGTAATGT
CTGCGAGGTCCCCACCAAGGGATGACATTACGGGTATAGCTACTGGATCATTCGCAAATT
TGGCCGTGGCCGTTGCCGGGACGGGCTTGTTTAGCTATACTTTCGTCGTATGCAAGTTGT
GACAATTCAGTACGGACAGTTGTTGCTCTTGAAAGGTAAGTGATTCCAGCTAAAAATCCG
TGACGAGCATCTTTGGAAACCTTGCGGCGCCGTTGGCACTACGAAAATTGTCAGGCATGC
TTACCCATCCAGGCAACTTATCTGTGGGCTCTTTTGGCATGATTATACGTAACAGATGCT
TATGGTGCCAACTACGGGCGACGGTCACTATACGAATGTCACCTGCCCATAATACTCGTC
AATAGTGCTATTCTGTGGATACTATTCCGTGAGCATATCGGCCGATCGCGTAGCTGTTGT
CTGCCGTGGCTGTCTCACTTAGTTTTAAGCAGATTCGACCCTAAACCTGCGTCGTGGGTA
CTCTTGCCCCTATAGTGCTCCAGGGGCGACATGTAAGTCAACCCTATCTTAGATGCAAGC
CCCTACCGACGGAAGGGATCCAGCCCAATCCGTCGCGTACACACCCACTGTTCGATGCGC
TGTACGGTGTCATATTATTGCTACAGTGACAATCCATCTCCCGGGCGCGGTACAATTTTT
GCACAGTTATACTATTCGGTAGCCCTGATCGACTAACAATCTTAACAGTGATAAGCACTT
ACCTCTTGCTCACAGTACACCAATCTCTGTGAAGCCTGTTTGAACTAAATGAGGTGGCAG
GGTACCAGCCGATAGTCGGGAGGT
>Rosalind_9937
CGTGATGCTTTATAGCAACAGAGTGTCGAGCTTCTGAGCTGGACGCCCATGAGAATAACT
GCACGTATCGTTCGGCTTTTGTGCGCCGATGATAGCGTGGTTAGCTCGATTGGTCTATAA
ACTACGTTGTTCGCTAACAAGGCTTTATTCTAAGGTCGGATAAAGAATGACTTCGCCGGG
ATCAGCTGTAAACGCGTGTATCTATAGTAATTAAATGCGGCGCAATGCAAGATACCCTCA
GCAAGTATTAGTCGACTGCTTGGAGGATTCTTTGAATGAGTTACTACCCTAGTTCGAGTT
TGTGAACGAAAGTTCTAATGGGGTCGATTCTGTTGGGCTGACCGTGTAACGCAAACGTGA
ACCTCAACTTAGCTGTATATGTATAAATTCACGGGACGATTGTCGGACGTGGCGATAGTG
GCGAATCAGTCGAAACTCATTTTCAAACAGTAACTGTGATGAACGGCCCCCGTAGCTGGC
CATTGCTGGCTCCCAACGTATCAGTTTATCTGGTGGCCCGTGTCTATCCTCCCTTCCAGA
TCAATGTAATCCCCGGACTATCAGAAGCCGGGCCGAACCCGCGATGAGTCGCCCCCTGCA
GGTGGCAGCTACGAAAAAATTATTGCCCGTTATTCAGACGGTCCGCCAATCAGCCCTTAT
ACATTGTTCCACCTATGTGACAGCCAAGCAGTAGGTGTCACCAACCGGACACCGCCACTT
TCGCTCGACGTTATGCGCCGTGGCTTCAAACGGGGTGTTGTGGTACAACTCGGAGCGGAT
TTTGAGTCGGACCTCAAGGCTAGCTGCGATGCAAGGCGTACCACTCTT
>Rosalind_3095
GATGAGGTTTTAACGCTAAAGTAGGTTGAAATCCACGGGCCCCTACTGGCTCCTCCAATT
GTTAGGTAGCTAACCGGAATAAGCGAGTTGCAGATCTTTCAGTCACTCAGACGACCGGTT
AGGAATACAGCGGCTCTCCCTATATTGCTAGGTGATAGAATGATATCTGCCTTATCATGT
ATTGGTTTTGTCACTTCCTCCCTTACCGATGCGGAACGCGCCTGGGCGTCATAGGGATTG
GGCAAATCAGGCTGTGCGTCGTGTAAGGTCCATAGTAGAAGGTGCGGTGGAGTGGGATAT
GTGGCGGGTAGTATGCCCAGGGACGAGCATTTGGCTGGCATTACGACTAAGATTTAGGAT
TGGATGAGGTCTTCCAACGCTGACGGTTTTCCCGATCAAAGCGGCTGTCTTCTCCGATTA
GGAAGGGGGCGTATTTACAATATCAATATTTAATTAGGGAGCGGGACCTGGTAGGCCGGC
CCGGCCGGAGCCACCATGTCGCCACGGCTCCCTAAAATCCAACTATTTGCTAAGTTGCGG
TCGCGGGAACTGTATTGCCGTTTGTAATAGGTCGGGAGCTAGGCTGCTCGACCTCGCTGT
TCCCTATGACTTATTCCGGTGCTCCTTTAAATCGTAAGGACCTTCATAATAGTCAGGGAC
TTAAGCTGTATTGGCCATTTTGGAAGTCGAGGGCGGCAAACTTCCAACACTGACATGAAT
TCCTTGCATGTCCCCAGAAAATCACATTTAAATTCTATCGGCACGCTGTTCTAGACTGGG
GGGGCTACCTGCTTACATGTGATAAAAGCGCTACCGAGATTATAACAGTAATGCTCGAAT
ACAGACTTGTTAGTGCAATAGAGGACTTAGCGACAGCGTAAGACTAGGTATCGTCGAATA
CTTGGCAGACTCCCGGCCGATGGGGGAAATAGCTTAGTAACAAAATGTGTATTTGCCTTC
ACGCTTCGTTTCTAGGATCTGAG
>Rosalind_9528
ATAGGGCCTTACTATTGGTCACTGAGGGCAGGCCGCACTCCTTCTGCAACTTCCGTGCCC
CGTGCTACAGCAGTGACTTTAGGACAAGTTCTAAATCGCTCATGCTTGGTTTCGCCGTGG
TCGGTTGGAGTTAGGGAGCAGGCAGTTCTGCATACAGCCCCCACAGTTGATGACTTGCGA
TAAATCTGGGTCTGCTGACGAGTGCCCTCCTCGATTACTCTTCTTTTATCCTCGCTATCC
CACGAAAACTGCCCTAAATAGACATTTATGTTCGAAGTGACTGTCCAGCACACTCCTCAA
GAGTTCTGATACGCGCTGAGTCTGCTACTGGACCCTGACTTGCAAGTGGCAGGGCTCCAT
ACTCACTCCATATGGTCGCCGTCCCGACTGAGCAAATACGTTAACTGCTAACTCACAAGC
CACGTCCTTTTTGTATGGCGATCACGAACTGGTTCACTACTGCAGGCAGGCTAGCATATC
ATCACACGTGGAGTGATCAAGGAAGATTGCGTTCGTACATGAACAGCAACGATTAGTAAT
TACCTCTTAACTTGAAATCCCCCGCGTGTAGAGAACGCGTTCGAATATCATCATATTTCA
CGAGATAGCGCCCCCAGATTGAGATATACCACCCGATCTACGAAGTGCTTCGCTAAGTTG
GGTCTGCGCCCTGAGTGCGTAATCATTGTAAAGGGTCCGCCACTTTTCGTTGAGTTGTCC
CGCCTAGGTTAGAGAGCCCGTCATAAGCCGTTTAACGTGCTCCGGGCCGACAGAAGGTTC
TTGGGATCGACGGGGCTTAGCCAACTCGCGACACGTACAGGCCCTAGAGGATTAATATGA
GTGGGACGCTCAATAACGGTATTAATTCACGCATCGGACGTACAA"
