


#check Nat.mod
#check Nat.mod 4 5
#eval Nat.mod 5 10
#eval Nat.mod 10 5
#eval Nat.mod 7 5

open Nat
notation:10000 a " ≡ " b " mod " m => Nat.mod a m = Nat.mod b m

#eval 5 ≡ 8 mod 3
#eval 5 ≡ 8 mod 4

def tabble : Char → Nat
  | 'A' => 4 | 'R' => 6
  | 'N' => 2 | 'D' => 2
  | 'C' => 2 | 'Q' => 2
  | 'E' => 2 | 'G' => 4
  | 'H' => 2 | 'I' => 3
  | 'L' => 6 | 'K' => 2
  | 'M' => 1 | 'F' => 2
  | 'P' => 4 | 'S' => 6
  | 'T' => 4 | 'W' => 1
  | 'Y' => 2 | 'V' => 4
  | _ => 1

#check String.map
#eval ("MA".data.map tabble |> List.foldl (· * ·) 3)

open List
def solution := (· % 1000000) ∘ foldl (· * ·) 3 ∘ map tabble ∘ String.data

#eval solution "MA" in
#eval (solution "MLCGFNPEKVKMDKLDKIFWLKEEMQWCMQIWKFKYTKTLIRNHWHIHHYLLFVWELSICYLRVICPYIWKDPVQQKIFFYFFPKVRYCSAFCSAPQYRIPEAMEAQIAQHTFCWQKHRPVCHRPIVCKIIYCIYCYNYKHVISASSESDDGRWMSTQYSSFRGPENRVFKGSGGDCKRVMYIYAARNVHYYQAIHICAIAYLRCQKHWVLYGETKFFTAMRDHKSAMDHACVKQESPFFYFINVQCQGSFPHYGNKKCILNKCNPFHWQHELITCSIPWRKFYLQRHLFNKCCAVVIGNHNDTFPKWGMRVDYLENAEYGYSNTHWIYCNCTVCCNTMKVLCFVCEWPMDCPWHNCNAYKKYIAPQNFEMACRHKHWGLKIMTLAAHLRMDCVHHTKNNATMEGEQFAHSYDKSHTPEWTLWQHCSNYPGNTGMEHHECSGNEPWVTVMQKNMDWSFTLYFGMKMAHGNNFDNYEELVKFPWGCDPMEFITIITQLYLVNNHPRNCGKSVVTWNHDREFPYATMIGREVCRSFMQPGHYFIHPMDAGACHYEEHPVWPGRAYKWDRTPRLQIQIVQINAQYWCMLHTKPTGKFKVAHCVWLSWRCLCCASERHVWFFCTDDFCSAYPNEMEVWEFDGLNHVRGTAKTEIAWCSFKTKWVGSCPPRNKSWKVDEEDQKRTKAYTATMMWCLCRYPKYEWLTSKHGHCWSQDHWAGGYSHMFPPIEHQMRGWGEEHKRDEHNNQRTPKEVHMDHYRYIWQYHGTERYREQWRMTQMLWPNMIMLWRRYSIKNWHNSVDQSDCGAYINIRVEKDVSTFMQFHKWNFVIIAMGVCGGYPFGFKFPFLVSDTVKSRCRLAGVHKMYSRIMRETKYYSGSCSYPEEDIGINSCGKNSSDHPSCGTNNCESNFQHVMTHPGKVNERFTWRQGKGNGVAVCHKRISIRLMRMQMEMMQTPYSAKVMNLICSHIGQWLVHNPKKCWYVWHPMNSVEVFITIHSQHPTW")
